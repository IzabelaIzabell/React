{"ast":null,"code":"import _classCallCheck from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mini/Documents/projektKoncowy/src/game.js\";\nimport React from 'react';\nimport './gameBoard.css';\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n\n    _this.boardGame = function (urows, ucolumns) {\n      // Build the rows in an array\n      var rows = [];\n\n      for (var y = 0; y < urows; y++) {\n        var cells = [];\n\n        for (var x = 0; x < ucolumns; x++) {\n          cells.push(React.createElement(Cell, {\n            key: x,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }));\n        } // Put them in the row\n\n\n        rows.push(React.createElement(\"tr\", {\n          key: y,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, cells));\n        console.log(cells);\n      } // Return the table\n\n\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, rows));\n    };\n\n    _this.check = function (ar) {\n      console.log(ar);\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var userRows = prompt(\"Provide number of rows\");\n      var userColumns = prompt(\"Provide number of columns\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.boardGame(userRows, userColumns)), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.randomBatmans(userRows, userColumns);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"play\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.check();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Check next population\"));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nvar Cell =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Cell, _React$Component2);\n\n  function Cell(props) {\n    var _this3;\n\n    _classCallCheck(this, Cell);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Cell).call(this, props));\n    _this3.state = {\n      image: \"./imagies/joker-white.jpg\"\n    };\n    return _this3;\n  }\n\n  _createClass(Cell, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require(\"\".concat(this.state.image)),\n        onClick: function onClick() {\n          return _this4.changeForBatman();\n        },\n        className: \"cell\",\n        alt: \"x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Cell;\n}(React.Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/mini/Documents/projektKoncowy/src/game.js"],"names":["React","Game","props","boardGame","urows","ucolumns","rows","y","cells","x","push","console","log","check","ar","state","userRows","prompt","userColumns","randomBatmans","Component","Cell","image","require","changeForBatman"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;IAGMC,I;;;;;AACF,gBAAaC,KAAb,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;;AADe,UAWnBC,SAXmB,GAWP,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAC7B;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;AAC5B,YAAMC,KAAK,GAAG,EAAd;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAApB,EAA8BI,CAAC,EAA/B,EAAmC;AAC/BD,UAAAA,KAAK,CAACE,IAAN,CAAW,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAED,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACH,SAJ2B,CAK5B;;;AACAH,QAAAA,IAAI,CAACI,IAAL,CAAU;AAAI,UAAA,GAAG,EAAEH,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaC,KAAb,CAAV;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH,OAX4B,CAe7B;;;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,IADH,CADF,CADF;AAOH,KAlCkB;;AAAA,UAuDnBO,KAvDmB,GAuDX,UAACC,EAAD,EAAM;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ;AACH,KAzDkB;;AAEf,UAAKC,KAAL,GAAW,EAAX;AAFe;AAKlB;;;;6BA2DQ;AAAA;;AACL,UAAIC,QAAQ,GAAGC,MAAM,CAAC,wBAAD,CAArB;AACA,UAAIC,WAAW,GAAGD,MAAM,CAAC,2BAAD,CAAxB;AAGA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKd,SAAL,CAAea,QAAf,EAAwBE,WAAxB,CAAN,CADJ,EAGI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,aAAL,CAAmBH,QAAnB,EAA4BE,WAA5B,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAKI;AAAQ,QAAA,OAAO,EAAG;AAAA,iBAAM,MAAI,CAACL,KAAL,EAAN;AAAA,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCALJ,CADJ;AAUH;;;;EAhFcb,KAAK,CAACoB,S;;IAqFnBC,I;;;;;AACF,gBAAYnB,KAAZ,EAAkB;AAAA;;AAAA;;AACd,+EAAMA,KAAN;AACI,WAAKa,KAAL,GAAW;AACPO,MAAAA,KAAK,EAAC;AADC,KAAX;AAFU;AAOjB;;;;6BAGQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACA,QAAA,GAAG,EAAEC,OAAO,WAAI,KAAKR,KAAL,CAAWO,KAAf,EADZ;AAEA,QAAA,OAAO,EAAI;AAAA,iBAAM,MAAI,CAACE,eAAL,EAAN;AAAA,SAFX;AAGA,QAAA,SAAS,EAAC,MAHV;AAIA,QAAA,GAAG,EAAC,GAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADJ;AASH;;;;EArBcxB,KAAK,CAACoB,S;;AA2BzB,eAAenB,IAAf","sourcesContent":["import React from 'react';\nimport './gameBoard.css'\n\n\nclass Game extends React.Component {\n    constructor (props){\n        super(props);\n        this.state={\n\n        }\n    }\n \n   \n\n\n    \n    boardGame = (urows, ucolumns) => {\n        // Build the rows in an array\n        let rows = [];\n        for (let y = 0; y < urows; y++) {\n            const cells = [];\n            for (let x = 0; x < ucolumns; x++) {\n                cells.push(<Cell key={x} />);\n            }\n            // Put them in the row\n            rows.push(<tr key={y}>{cells}</tr>);\n            console.log(cells)\n        }\n        \n\n\n        // Return the table\n        return (\n          <table>\n            <tbody>\n              {rows}\n            </tbody>\n          </table>\n        );\n    }\n    // randomBatmans = (urows1,ucolumns1) =>{\n    //     // count all img \n    //     let calcBoard = urows1 * ucolumns1\n    //     let randomNr = Math.round(Math.random() * (calcBoard - 1) + 1);\n    //     console.log(randomNr)\n    //     let arrForIndex = []\n    //     for (let i =0; i<randomNr; i++){\n    //         let finalIndex = Math.round(Math.random() * (calcBoard - 1) + 1);\n    //         console.log(finalIndex)\n    //      arrForIndex.push(finalIndex);\n     \n    //     }\n    //     console.log(arrForIndex)\n        \n \n\n\n            \n    // }\n\n    check = (ar)=>{\n        console.log(ar)\n    }\n  \n\n\n\n\n\n    render() {\n        let userRows = prompt(\"Provide number of rows\");\n        let userColumns = prompt(\"Provide number of columns\");\n      \n\n        return (\n            <div>\n                <div>{this.boardGame(userRows,userColumns)}</div>\n            {/* start generate random index during click on button  */}\n                <button onClick={() => this.randomBatmans(userRows,userColumns)}>play</button>\n\n                <button onClick ={() => this.check()}>Check next population</button>\n       \n            </div>\n        );\n    }\n}\n\n\n\nclass Cell extends React.Component {\n    constructor(props){\n        super(props)\n            this.state={\n                image:\"./imagies/joker-white.jpg\"\n\n    \n        }\n    }\n\n   \n    render() {\n        return (\n            <td>\n              <img\n              src={require(`${this.state.image}`)}\n              onClick = {() => this.changeForBatman()}\n              className=\"cell\"\n              alt=\"x\" />\n          </td>\n        );\n    }\n}\n\n         \n\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}