{"ast":null,"code":"import _classCallCheck from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mini/Documents/projektKoncowy/src/maps.js\";\nimport React, { Component } from 'react';\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\nvar Maps =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Maps, _Component);\n\n  function Maps() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Maps);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Maps)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getSelectedCountries = function () {\n      var selected = [];\n\n      for (var i = 0; i < map.dataProvider.areas.length; i++) {\n        if (map.dataProvider.areas[i].showAsSelected) selected.push(map.dataProvider.areas[i].id);\n      }\n\n      return selected;\n    };\n\n    return _this;\n  }\n\n  _createClass(Maps, [{\n    key: \"render\",\n    value: function render() {\n      var map = {\n        \"type\": \"map\",\n        \"theme\": \"light\",\n        \"projection\": \"eckert3\",\n        \"dataProvider\": {\n          \"map\": \"worldLow\",\n          \"getAreasFromMap\": true\n        },\n        \"areasSettings\": {\n          \"selectedColor\": \"#CC0000\",\n          \"selectable\": true\n        },\n        \"listeners\": [{\n          \"event\": \"clickMapObject\",\n          \"method\": function method(e) {\n            var area = e.mapObject; // Toggle showAsSelected\n\n            area.showAsSelected = !area.showAsSelected;\n            e.chart.returnInitialColor(area); // Update the list\n\n            document.getElementById(\"selected\").innerHTML = JSON.stringify(getSelectedCountries());\n          }\n        }]\n      };\n      /**\n       * Function which extracts currently selected country list.\n       * Returns array consisting of country ISO2 codes\n       */\n\n      return React.createElement(\"div\", {\n        id: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(AmCharts.React, {\n        onclick: this.getSelectedCountries,\n        style: {\n          width: \"100%\",\n          height: \"500px\"\n        },\n        options: map,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Maps;\n}(Component);\n\nexport default Maps;","map":{"version":3,"sources":["/Users/mini/Documents/projektKoncowy/src/maps.js"],"names":["React","Component","AmCharts","Maps","getSelectedCountries","selected","i","map","dataProvider","areas","length","showAsSelected","push","id","e","area","mapObject","chart","returnInitialColor","document","getElementById","innerHTML","JSON","stringify","width","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,2BAArB;;IAGMC,I;;;;;;;;;;;;;;;;;;UACFC,oB,GAAqB,YAAK;AACtB,UAAIC,QAAQ,GAAG,EAAf;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGC,GAAG,CAACC,YAAJ,CAAiBC,KAAjB,CAAuBC,MAA1C,EAAkDJ,CAAC,EAAnD,EAAuD;AACrD,YAAGC,GAAG,CAACC,YAAJ,CAAiBC,KAAjB,CAAuBH,CAAvB,EAA0BK,cAA7B,EACEN,QAAQ,CAACO,IAAT,CAAcL,GAAG,CAACC,YAAJ,CAAiBC,KAAjB,CAAuBH,CAAvB,EAA0BO,EAAxC;AACH;;AACD,aAAOR,QAAP;AACD,K;;;;;;;6BACK;AAEN,UAAME,GAAG,GAAG;AAGd,gBAAQ,KAHM;AAId,iBAAS,OAJK;AAKd,sBAAc,SALA;AAMd,wBAAgB;AACd,iBAAO,UADO;AAEd,6BAAmB;AAFL,SANF;AAUd,yBAAiB;AACf,2BAAiB,SADF;AAEf,wBAAc;AAFC,SAVH;AAed,qBAAa,CAAC;AACZ,mBAAS,gBADG;AAEZ,oBAAU,gBAASO,CAAT,EAAY;AAIpB,gBAAIC,IAAI,GAAGD,CAAC,CAACE,SAAb,CAJoB,CAMpB;;AACAD,YAAAA,IAAI,CAACJ,cAAL,GAAsB,CAACI,IAAI,CAACJ,cAA5B;AACAG,YAAAA,CAAC,CAACG,KAAF,CAAQC,kBAAR,CAA2BH,IAA3B,EARoB,CAUpB;;AACAI,YAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,SAApC,GAAgDC,IAAI,CAACC,SAAL,CAAenB,oBAAoB,EAAnC,CAAhD;AACD;AAdW,SAAD;AAfC,OAAZ;AAiCJ;;;;;AAKA,aACE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD,CAAU,KAAV;AAAgB,QAAA,OAAO,EAAI,KAAKA,oBAAhC;AAAsD,QAAA,KAAK,EAAE;AAAEoB,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAA7D;AAAiG,QAAA,OAAO,EAAElB,GAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADF;AAIE;;;;EArDeN,S;;AAyDlB,eAAeE,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport AmCharts from \"@amcharts/amcharts3-react\";\n\n\nclass Maps extends Component {\n    getSelectedCountries=()=> {\n        var selected = [];\n        for(var i = 0; i < map.dataProvider.areas.length; i++) {\n          if(map.dataProvider.areas[i].showAsSelected)\n            selected.push(map.dataProvider.areas[i].id);\n        }\n        return selected;\n      }\n    render(){\n\n      const map = {\n\n\n    \"type\": \"map\",\n    \"theme\": \"light\",\n    \"projection\": \"eckert3\",\n    \"dataProvider\": {\n      \"map\": \"worldLow\",\n      \"getAreasFromMap\": true\n    },\n    \"areasSettings\": {\n      \"selectedColor\": \"#CC0000\",\n      \"selectable\": true\n    },\n   \n    \"listeners\": [{\n      \"event\": \"clickMapObject\",\n      \"method\": function(e) {\n        \n \n        \n        var area = e.mapObject;\n        \n        // Toggle showAsSelected\n        area.showAsSelected = !area.showAsSelected;\n        e.chart.returnInitialColor(area);\n        \n        // Update the list\n        document.getElementById(\"selected\").innerHTML = JSON.stringify(getSelectedCountries());\n      }\n    }]\n  };\n  \n  /**\n   * Function which extracts currently selected country list.\n   * Returns array consisting of country ISO2 codes\n   */\n\n  return (\n    <div id=\"selected\">\n        <AmCharts.React onclick = {this.getSelectedCountries} style={{ width: \"100%\", height: \"500px\" }} options={map} />\n    </div>);\n   }\n }\n\n\n export default Maps;"]},"metadata":{},"sourceType":"module"}