{"ast":null,"code":"import _classCallCheck from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mini/Documents/projektKoncowy/src/game.js\";\nimport React from 'react';\nimport './gameBoard.css';\n\nvar BoardGame =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BoardGame, _React$Component);\n\n  function BoardGame() {\n    _classCallCheck(this, BoardGame);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BoardGame).apply(this, arguments));\n  }\n\n  _createClass(BoardGame, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(Row, {\n        userColumns: userColumns,\n        userRows: userRows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BoardGame;\n}(React.Component);\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Row, _React$Component2);\n\n  function Row(props) {\n    var _this;\n\n    _classCallCheck(this, Row);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Row).call(this, props));\n\n    _this.boardGame = function (urows, ucolumns) {\n      // Build the rows in an array\n      var rows = [];\n\n      for (var y = 0; y < urows; y++) {\n        var cells = [];\n\n        for (var x = 0; x < ucolumns; x++) {\n          cells.push(React.createElement(Cell, {\n            userRows: userRows,\n            userColumns: userColumns,\n            key: x,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }));\n        } // Put them in the row\n\n\n        rows.push(React.createElement(\"tr\", {\n          key: y,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, cells));\n      } // Return the table\n\n\n      return rows;\n    };\n\n    return _this;\n  }\n\n  _createClass(Row, [{\n    key: \"render\",\n    value: function render() {\n      var userRows = prompt(\"Provide number of rows\");\n      var userColumns = prompt(\"Provide number of columns\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.boardGame(userRows, userColumns));\n    }\n  }]);\n\n  return Row;\n}(React.Component);\n\nvar Cell =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Cell, _React$Component3);\n\n  function Cell(props) {\n    var _this2;\n\n    _classCallCheck(this, Cell);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Cell).call(this, props));\n\n    _this2.changeForBatman = function () {\n      if (_this2.state.image === \"./imagies/joker-white.jpg\") {\n        _this2.setState({\n          image: \"./imagies/batman-black.jpg\"\n        });\n      } else {\n        _this2.setState({\n          image: \"./imagies/joker-white.jpg\"\n        });\n      }\n    };\n\n    _this2.state = {\n      image: \"./imagies/joker-white.jpg\"\n    };\n    return _this2;\n  }\n\n  _createClass(Cell, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var final = React.createElement(\"img\", {\n        src: require(\"\".concat(this.state.image)),\n        onClick: function onClick() {\n          return _this3.changeForBatman();\n        },\n        className: \"cell\",\n        alt: \"x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, final);\n    }\n  }]);\n\n  return Cell;\n}(React.Component);\n\nexport default BoardGame;","map":{"version":3,"sources":["/Users/mini/Documents/projektKoncowy/src/game.js"],"names":["React","BoardGame","userColumns","userRows","Component","Row","props","boardGame","urows","ucolumns","rows","y","cells","x","push","prompt","Cell","changeForBatman","state","image","setState","final","require"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;IAIMC,S;;;;;;;;;;;;;6BACI;AAGF,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,GAAD;AAAK,QAAA,WAAW,EAAEC,WAAlB;AAA+B,QAAA,QAAQ,EAAEC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADA,CADJ;AAQH;;;;EAZmBH,KAAK,CAACI,S;;IAexBC,G;;;;;AACF,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;;AADc,UAIpBC,SAJoB,GAIR,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAC/B;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;AAC5B,YAAMC,KAAK,GAAG,EAAd;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAApB,EAA8BI,CAAC,EAA/B,EAAmC;AAC/BD,UAAAA,KAAK,CAACE,IAAN,CAAW,oBAAC,IAAD;AAAM,YAAA,QAAQ,EAAGX,QAAjB;AAA2B,YAAA,WAAW,EAAGD,WAAzC;AAAsD,YAAA,GAAG,EAAEW,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AAEH,SAL2B,CAO5B;;;AACAH,QAAAA,IAAI,CAACI,IAAL,CAAU;AAAI,UAAA,GAAG,EAAEH,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaC,KAAb,CAAV;AAEH,OAb8B,CAcjC;;;AACE,aAAOF,IAAP;AAEH,KArBqB;;AAAA;AAEjB;;;;6BAoBG;AACJ,UAAIP,QAAQ,GAAGY,MAAM,CAAC,wBAAD,CAArB;AACQ,UAAIb,WAAW,GAAGa,MAAM,CAAC,2BAAD,CAAxB;AAER,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKR,SAAL,CAAeJ,QAAf,EAAwBD,WAAxB,CAAN,CADH;AAIH;;;;EA/BiBF,KAAK,CAACI,S;;IAmClBY,I;;;;;AACF,gBAAYV,KAAZ,EAAkB;AAAA;;AAAA;;AACd,+EAAMA,KAAN;;AADc,WAQlBW,eARkB,GAQA,YAAK;AAEnB,UAAK,OAAKC,KAAL,CAAWC,KAAX,KAAoB,2BAAzB,EAAqD;AACjD,eAAKC,QAAL,CAAc;AACVD,UAAAA,KAAK,EAAE;AADG,SAAd;AAKH,OAND,MAMM;AACF,eAAKC,QAAL,CAAc;AACVD,UAAAA,KAAK,EAAE;AADG,SAAd;AAIH;AACJ,KAtBiB;;AAEV,WAAKD,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC;AADC,KAAX;AAFU;AAOjB;;;;6BAkBQ;AAAA;;AAGL,UAAIE,KAAK,GAAI;AACb,QAAA,GAAG,EAAEC,OAAO,WAAI,KAAKJ,KAAL,CAAWC,KAAf,EADC;AAGb,QAAA,OAAO,EAAI;AAAA,iBAAM,MAAI,CAACF,eAAL,EAAN;AAAA,SAHE;AAIb,QAAA,SAAS,EAAC,MAJG;AAKb,QAAA,GAAG,EAAC,GALS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;AAOA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKI,KAAL,CADJ;AAIH;;;;EAxCcrB,KAAK,CAACI,S;;AA4CzB,eAAeH,SAAf","sourcesContent":["import React from 'react';\nimport './gameBoard.css'\n\n\n\nclass BoardGame extends React.Component {\n render() {\n  \n\n        return (\n            <table>\n            <tbody>\n             <Row userColumns={userColumns} userRows={userRows} />\n            </tbody>\n          </table>\n        );\n        \n    }\n}\n\nclass Row extends React.Component{\n    constructor(props){\n        super(props)\n    }\n\n  boardGame = (urows, ucolumns) => {\n    // Build the rows in an array\n    let rows = [];\n    for (let y = 0; y < urows; y++) {\n        const cells = [];\n        for (let x = 0; x < ucolumns; x++) {\n            cells.push(<Cell userRows ={userRows} userColumns ={userColumns} key={x}  />);\n            \n        }\n\n        // Put them in the row\n        rows.push(<tr key={y}>{cells}</tr>);\n    \n    }\n  // Return the table\n    return rows \n    \n}\nrender(){\n    let userRows = prompt(\"Provide number of rows\");\n            let userColumns = prompt(\"Provide number of columns\");\n\n    return(\n       <div>{this.boardGame(userRows,userColumns)}</div>\n\n    )\n}\n\n}\n\nclass Cell extends React.Component {\n    constructor(props){\n        super(props)\n            this.state={\n                image:\"./imagies/joker-white.jpg\"\n\n    \n        }\n    }\n    changeForBatman = () =>{\n        \n        if ( this.state.image ===\"./imagies/joker-white.jpg\"){\n            this.setState({\n                image: \"./imagies/batman-black.jpg\"\n                \n\n            })\n        }else {\n            this.setState({\n                image: \"./imagies/joker-white.jpg\"\n               \n            })\n        }\n    }\n\n   \n    render() {\n   \n\n        let final =  <img\n        src={require(`${this.state.image}`)}\n\n        onClick = {() => this.changeForBatman()}\n        className=\"cell\"\n        alt=\"x\" />\n  \n        return (\n            <td>{final}</td>\n       \n        );\n    }\n}\n\n\nexport default BoardGame;\n"]},"metadata":{},"sourceType":"module"}