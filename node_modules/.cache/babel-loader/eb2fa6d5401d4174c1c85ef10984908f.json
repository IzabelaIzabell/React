{"ast":null,"code":"import _classCallCheck from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mini/Documents/projektKoncowy/src/maps.js\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nvar wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\"\n};\nvar data = [{\n  id: \"HUN\",\n  name: \"Hungary\",\n  val: 10\n}, {\n  id: \"ISL\",\n  name: \"Iceland\",\n  val: 16\n}, {\n  id: \"ISR\",\n  name: \"Israel\",\n  val: 5\n}];\nvar minValue = 5; // based on the data array above\n\nvar maxValue = 16; // based on the data array above\n\nvar minColor = \"#CFD8DC\";\nvar maxColor = \"#37474F\";\nvar customScale = scaleLinear().domain([minValue, maxValue]).range([minColor, maxColor]);\n\nvar Maps =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Maps, _Component);\n\n  function Maps() {\n    _classCallCheck(this, Maps);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Maps).apply(this, arguments));\n  }\n\n  _createClass(Maps, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: wrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(ComposableMap, {\n        width: 980,\n        height: 551,\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(ZoomableGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Geographies, {\n        geography: \"../src/world-50m.json\",\n        disableOptimization: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, function (geos, proj) {\n        return geos.map(function (geo, i) {\n          var country = data.find(function (d) {\n            return d.id === geo.properties.ISO_A3;\n          });\n          return React.createElement(Geography, {\n            key: geo.properties.ISO_A3 + i,\n            cacheId: geo.properties.ISO_A3 + i,\n            geography: geo,\n            projection: proj,\n            style: {\n              default: {\n                fill: country ? customScale(country.val) : \"#ECEFF1\",\n                stroke: \"#FFF\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#263238\",\n                stroke: \"#FFF\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#263238\",\n                stroke: \"#FFF\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n        });\n      }))));\n    }\n  }]);\n\n  return Maps;\n}(Component);\n\nexport default Maps;","map":{"version":3,"sources":["/Users/mini/Documents/projektKoncowy/src/maps.js"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","scaleLinear","wrapperStyles","width","maxWidth","margin","data","id","name","val","minValue","maxValue","minColor","maxColor","customScale","domain","range","Maps","height","geos","proj","map","geo","i","country","find","d","properties","ISO_A3","default","fill","stroke","strokeWidth","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n} from \"react-simple-maps\"\nimport { scaleLinear } from \"d3-scale\"\n\nconst wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\",\n}\n\nconst data = [\n  { id: \"HUN\", name: \"Hungary\", val: 10 },\n  { id: \"ISL\", name: \"Iceland\", val: 16 },\n  { id: \"ISR\", name: \"Israel\", val: 5 },\n]\n\nconst minValue = 5 // based on the data array above\nconst maxValue = 16 // based on the data array above\n\nconst minColor = \"#CFD8DC\"\nconst maxColor = \"#37474F\"\n\nconst customScale = scaleLinear()\n  .domain([minValue,maxValue])\n  .range([minColor,maxColor])\n\nclass Maps extends Component {\n  render() {\n    return (\n      <div style={wrapperStyles}>\n        <ComposableMap\n          width={980}\n          height={551}\n          style={{\n            width: \"100%\",\n            height: \"auto\",\n          }}\n          >\n          <ZoomableGroup>\n            <Geographies geography=\"../src/world-50m.json\" disableOptimization>\n              {(geos, proj) => geos.map((geo, i) => {\n\n                const country = data.find(d => d.id === geo.properties.ISO_A3)\n                \n                return (\n                  <Geography\n                    key={geo.properties.ISO_A3 + i}\n                    cacheId={geo.properties.ISO_A3 + i}\n                    geography={ geo }\n                    projection={ proj }\n                    style={{\n                      default: {\n                        fill: country ? customScale(country.val) : \"#ECEFF1\",\n                        stroke: \"#FFF\",\n                        strokeWidth: 0.75,\n                        outline: \"none\",\n                      },\n                      hover: {\n                        fill: \"#263238\",\n                        stroke: \"#FFF\",\n                        strokeWidth: 0.75,\n                        outline: \"none\",\n                      },\n                      pressed: {\n                        fill: \"#263238\",\n                        stroke: \"#FFF\",\n                        strokeWidth: 0.75,\n                        outline: \"none\",\n                      }\n                    }}\n                  />\n                )\n              })}\n            </Geographies>\n          </ZoomableGroup>\n        </ComposableMap>\n      </div>\n    )\n  }\n}\n\nexport default Maps"]},"metadata":{},"sourceType":"module"}