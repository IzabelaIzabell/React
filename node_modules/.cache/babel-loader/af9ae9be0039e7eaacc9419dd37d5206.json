{"ast":null,"code":"import _classCallCheck from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mini/Documents/projektKoncowy/src/newGame.js\";\nimport React from 'react';\nimport './gameBoard.css';\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.create2DArray = function (rows, columns) {\n      var newArray = [];\n      var index = 0;\n\n      for (var i = 0; i <= rows; i++) {\n        newArray[i] = [];\n        var temp = React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"x\");\n        index++;\n\n        for (var j = 0; j <= columns; j++) {\n          index++;\n          newArray[i].push(temp);\n        }\n      }\n\n      return newArray;\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var userRows = prompt(\"Provide number of rows\");\n      var userColumns = prompt(\"Provide number of columns\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.create2DArray(userRows, userColumns));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/mini/Documents/projektKoncowy/src/newGame.js"],"names":["React","Game","create2DArray","rows","columns","newArray","index","i","temp","j","push","userRows","prompt","userColumns","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;IAIMC,I;;;;;;;;;;;;;;;;;;UAEFC,a,GAAgB,UAACC,IAAD,EAAOC,OAAP,EAAiB;AAE7B,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,KAAK,GAAG,CAAZ;;AAEA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAGJ,IAAnB,EAAyBI,CAAC,EAA1B,EAA6B;AACzBF,QAAAA,QAAQ,CAACE,CAAD,CAAR,GAAc,EAAd;AACA,YAAIC,IAAI,GAAG;AAAK,UAAA,GAAG,EAAGF,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAX;AACAA,QAAAA,KAAK;;AACL,aAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIL,OAApB,EAA6BK,CAAC,EAA9B,EAAiC;AAC7BH,UAAAA,KAAK;AAELD,UAAAA,QAAQ,CAACE,CAAD,CAAR,CAAYG,IAAZ,CAAiBF,IAAjB;AAGH;AACJ;;AAED,aAAOH,QAAP;AACH,K;;;;;;;6BAOO;AACJ,UAAIM,QAAQ,GAAGC,MAAM,CAAC,wBAAD,CAArB;AACA,UAAIC,WAAW,GAAED,MAAM,CAAC,2BAAD,CAAvB;AACJ,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKV,aAAL,CAAmBS,QAAnB,EAA4BE,WAA5B,CAAN,CADA;AAEC;;;;EAjCcb,KAAK,CAACc,S;;AAoCzB,eAAeb,IAAf","sourcesContent":["import React from 'react';\nimport './gameBoard.css'\n\n\n\nclass Game extends React.Component {\n\n    create2DArray = (rows, columns)=>{\n       \n        let newArray = [];\n        let index = 0; \n      \n        for(var i = 0; i<= rows; i++){\n            newArray[i] = [];\n            let temp = <div key ={index}>x</div>;\n            index ++ \n            for(var j = 0; j <= columns; j++){\n                index ++\n             \n                newArray[i].push(temp);\n             \n              \n            }\n        }\n\n        return newArray\n    }\n    \n\n\n\n\n    \n    render(){\n        let userRows = prompt(\"Provide number of rows\");\n        let userColumns =prompt(\"Provide number of columns\");\n    return(\n    <div>{this.create2DArray(userRows,userColumns)}</div>)\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}