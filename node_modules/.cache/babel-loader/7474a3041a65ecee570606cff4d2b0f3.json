{"ast":null,"code":"import _classCallCheck from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mini/Documents/projektKoncowy/src/game.js\";\nimport React from 'react';\nimport './gameBoard.css';\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n\n    _this.boardGame = function (urows, ucolumns) {\n      // Build the rows in an array\n      var rows = [];\n\n      for (var y = 0; y < urows; y++) {\n        var cells = [];\n\n        for (var x = 0; x < ucolumns; x++) {\n          cells.push(React.createElement(Cell, {\n            key: x,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }));\n        } // Put them in the row\n\n\n        rows.push(React.createElement(\"tr\", {\n          key: y,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, cells));\n      } // Return the table\n\n\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, rows));\n    };\n\n    _this.state = {\n      counter: 0\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var userRows = prompt(\"Provide number of rows\");\n      var userColumns = prompt(\"Provide number of columns\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.boardGame(userRows, userColumns)));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nvar Cell =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Cell, _React$Component2);\n\n  function Cell(props) {\n    var _this2;\n\n    _classCallCheck(this, Cell);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Cell).call(this, props));\n\n    _this2.changeForBatman = function () {\n      //need to change img during click \n      if (_this2.state.image === \"./imagies/joker-white.jpg\") {\n        _this2.setState({\n          image: \"./imagies/batman-black.jpg\",\n          counter: _this2.state.counter + 1\n        });\n\n        console.log(_this2.state.counter);\n      } else {\n        // this.setState({\n        //     image: \"./imagies/joker-white.jpg\"\n        // })\n        console.log(\"to pole juz bylo klikniete\");\n      }\n    };\n\n    _this2.state = {\n      image: \"./imagies/joker-white.jpg\",\n      alert: \"start\",\n      counter: 0\n    };\n    return _this2;\n  } // handleClick = ()=>{\n  //     if(typeof this.props.onClick === \"function\"){\n  //         this.props.onClick();\n  //     }\n  // }\n\n\n  _createClass(Cell, [{\n    key: \"render\",\n    // }\n    // componentDidMount(){\n    //     this.timeoutId = setTimeout(()=>{\n    //     this.setState({\n    //         alert:\"start click\"\n    //     })\n    //         },5000)\n    // }\n    // componentWillUnmount(){\n    //     clearTimeout(this.timeout);\n    //     this.setState({\n    //         alert: `your score is ${this.state.counter} `\n    //     })\n    // }\n    value: function render() {\n      var _this3 = this;\n\n      var final = React.createElement(\"img\", {\n        src: require(\"\".concat(this.state.image)),\n        onClick: function onClick() {\n          return _this3.changeForBatman;\n        },\n        className: \"cell\",\n        alt: \"x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, final);\n    }\n  }]);\n\n  return Cell;\n}(React.Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/mini/Documents/projektKoncowy/src/game.js"],"names":["React","Game","props","boardGame","urows","ucolumns","rows","y","cells","x","push","state","counter","userRows","prompt","userColumns","Component","Cell","changeForBatman","image","setState","console","log","alert","final","require"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './gameBoard.css'\n\n\n\nclass Game extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            counter :0\n        }\n    }\n\n    boardGame = (urows, ucolumns) => {\n        // Build the rows in an array\n        let rows = [];\n        for (let y = 0; y < urows; y++) {\n            const cells = [];\n            for (let x = 0; x < ucolumns; x++) {\n                cells.push(<Cell key={x}  />);\n                \n            }\n    \n            // Put them in the row\n            rows.push(<tr key={y}>{cells}</tr>);\n        \n        }\n      // Return the table\n        return (\n          <table>\n            <tbody>\n              {rows}\n            </tbody>\n          </table>\n        );\n    }\n\n\n\n\n    render() {\n        let userRows = prompt(\"Provide number of rows\");\n        let userColumns = prompt(\"Provide number of columns\");\n\n        return (\n            <div>\n                <div>{this.boardGame(userRows,userColumns)}</div>\n                \n            {/* start generate random index during click on button  */}\n                {/* <button onClick ={() => this.check(musze przekazac cala tablice z funkcji boardGame)}>Check next population</button> */}\n\n\n               \n       \n            </div>\n        );\n    }\n}\n\n\n\nclass Cell extends React.Component {\n    constructor(props){\n        super(props)\n            this.state={\n                image:\"./imagies/joker-white.jpg\",\n                alert:\"start\",\n                counter: 0\n\n    \n        }\n    }\n    // handleClick = ()=>{\n    //     if(typeof this.props.onClick === \"function\"){\n    //         this.props.onClick();\n    //     }\n    // }\n    changeForBatman = () =>{\n        //need to change img during click \n        if ( this.state.image ===\"./imagies/joker-white.jpg\"){\n            this.setState({\n                image: \"./imagies/batman-black.jpg\",\n                counter: this.state.counter +1\n             \n                \n\n            })\n            console.log(this.state.counter)\n        }else {\n            // this.setState({\n            //     image: \"./imagies/joker-white.jpg\"\n               \n            // })\n            console.log( \"to pole juz bylo klikniete\")\n        }\n    }\n    // }\n    // componentDidMount(){\n    //     this.timeoutId = setTimeout(()=>{\n    //     this.setState({\n    //         alert:\"start click\"\n    //     })\n    //         },5000)\n       \n    // }\n    // componentWillUnmount(){\n    //     clearTimeout(this.timeout);\n    //     this.setState({\n    //         alert: `your score is ${this.state.counter} `\n    //     })\n    // }\n\n\n   \n    render() {\n\n\n\n\n        let final =  <img\n        src={require(`${this.state.image}`)}\n\n        onClick = {() => this.changeForBatman}\n        className=\"cell\"\n        alt=\"x\" />\n  \n        return (\n         \n            <td>{final}</td>\n            \n   \n        );\n    }\n}\n\n\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}