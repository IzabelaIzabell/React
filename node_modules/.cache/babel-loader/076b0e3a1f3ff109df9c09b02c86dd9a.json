{"ast":null,"code":"import _classCallCheck from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mini/Documents/projektKoncowy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mini/Documents/projektKoncowy/src/newGame.js\";\nimport React from 'react';\nimport './gameBoard.css';\n\nvar BoardForGame =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BoardForGame, _React$Component);\n\n  function BoardForGame(props) {\n    var _this;\n\n    _classCallCheck(this, BoardForGame);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BoardForGame).call(this, props));\n\n    _this.handleClick = function (event) {\n      console.log(event);\n    };\n\n    _this.boardGame = function (urows, ucolumns) {\n      // Build the rows in an array\n      var rows = [];\n\n      for (var y = 0; y < urows; y++) {\n        var cells = [];\n\n        for (var x = 0; x < ucolumns; x++) {\n          var id = void 0;\n          cells.push(React.createElement(\"td\", {\n            key: x,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: require(\"\".concat(_this.state.image)),\n            onClick: function onClick(e) {\n              return _this.handleClick(e.target);\n            },\n            id: x,\n            className: \"cell\",\n            alt: \"x\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          })));\n        } // Put them in the row\n\n\n        rows.push(React.createElement(\"tr\", {\n          key: y,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, cells));\n      } // Return the table\n\n\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, rows));\n    };\n\n    _this.state = {\n      image: \"./imagies/joker-white.jpg\",\n      counter: 0\n    };\n    return _this;\n  }\n\n  _createClass(BoardForGame, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.boardGame(this.props.userRows, this.props.userColumns));\n    }\n  }]);\n\n  return BoardForGame;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var userRows = prompt(\"Provide number of rows\");\n      var userColumns = prompt(\"Provide number of columns\");\n      return React.createElement(BoardForGame, {\n        userRows: userRows,\n        userColumns: userColumns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/mini/Documents/projektKoncowy/src/newGame.js"],"names":["React","BoardForGame","props","handleClick","event","console","log","boardGame","urows","ucolumns","rows","y","cells","x","id","push","require","state","image","e","target","counter","userRows","userColumns","Component","Game","prompt"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;IAMMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAOfC,WAPe,GAOD,UAACC,KAAD,EAAU;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAGH,KAXc;;AAAA,UAcfG,SAde,GAcH,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACrB;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;AAC5B,YAAMC,KAAK,GAAG,EAAd;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAApB,EAA8BI,CAAC,EAA/B,EAAmC;AAC/B,cAAIC,EAAE,SAAN;AACAF,UAAAA,KAAK,CAACG,IAAN,CAAW;AAAI,YAAA,GAAG,EAAEF,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAY;AACX,YAAA,GAAG,EAAEG,OAAO,WAAI,MAAKC,KAAL,CAAWC,KAAf,EADD;AAEX,YAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,qBAAO,MAAKhB,WAAL,CAAiBgB,CAAC,CAACC,MAAnB,CAAP;AAAA,aAFE;AAGX,YAAA,EAAE,EAAGP,CAHM;AAIvB,YAAA,SAAS,EAAC,MAJa;AAKxB,YAAA,GAAG,EAAC,GALoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,CAAX;AAOH,SAZ2B,CAc5B;;;AACAH,QAAAA,IAAI,CAACK,IAAL,CAAU;AAAI,UAAA,GAAG,EAAEJ,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaC,KAAb,CAAV;AAEH,OApBoB,CAsBvB;;;AACE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,IADH,CADF,CADF;AAQH,KA7CM;;AAEf,UAAKO,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,2BADE;AAETG,MAAAA,OAAO,EAAE;AAFA,KAAb;AAFe;AAMb;;;;6BAwCc;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKd,SAAL,CAAe,KAAKL,KAAL,CAAWoB,QAA1B,EAAmC,KAAKpB,KAAL,CAAWqB,WAA9C,CAAN,CADJ;AAIH;;;;EApDUvB,KAAK,CAACwB,S;;IAuD3BC,I;;;;;;;;;;;;;6BAKI;AACN,UAAIH,QAAQ,GAAGI,MAAM,CAAC,wBAAD,CAArB;AACA,UAAIH,WAAW,GAAGG,MAAM,CAAC,2BAAD,CAAxB;AACE,aACI,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAGJ,QAAzB;AAAmC,QAAA,WAAW,EAAEC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAIH;;;;EAZgBvB,KAAK,CAACwB,S;;AAgBzB,eAAeC,IAAf","sourcesContent":["import React from 'react';\nimport './gameBoard.css'\n\n\n\n\n\nclass BoardForGame extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: \"./imagies/joker-white.jpg\",\n            counter: 0\n\n        }}\n        handleClick = (event )=>{\n            console.log(event)\n\n\n        }\n\n\n        boardGame = (urows, ucolumns) => {\n                    // Build the rows in an array\n                    let rows = [];\n                    for (let y = 0; y < urows; y++) {\n                        const cells = []; \n                 \n                        for (let x = 0; x < ucolumns; x++) {\n                            let id;\n                            cells.push(<td key={x}><img \n                                        src={require(`${this.state.image}`)}\n                                        onClick={(e) => this.handleClick(e.target)}\n                                        id ={x}\n                            className=\"cell\"\n                           alt=\"x\" /></td>)\n                            \n                        }\n                \n                        // Put them in the row\n                        rows.push(<tr key={y}>{cells}</tr>);\n                    \n                    }\n                \n                  // Return the table\n                    return (\n                      <table>\n                        <tbody>\n                          {rows}\n                        </tbody>\n                      </table>\n                    );\n\n                }\n                render(){\n                    return (\n                        <div>{this.boardGame(this.props.userRows,this.props.userColumns)}</div>\n\n                    )\n                }\n    }\n\nclass Game extends React.Component {\n    \n\n\n\n  render(){\n    let userRows = prompt(\"Provide number of rows\");\n    let userColumns = prompt(\"Provide number of columns\");\n      return(\n          <BoardForGame userRows ={userRows} userColumns={userColumns}/>\n\n      )\n  }\n    }\n\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}